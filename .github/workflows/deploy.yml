name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build-and-deploy:
    if: github.event.pull_request.merged == true  # Ensures only merged PRs trigger the workflow
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/sctx-apigw:1.0.0 .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/sctx-apigw:1.0.0

      - name: Deploy to EC2
        # You may pin to the exact commit or the version.
        # uses: tiyee/action-ssh@b2d48d44e978ff09e0c37479a429a8374da6bb63
        uses: tiyee/action-ssh@v1.0.1
        with:
          # Command to execute on the remote server.
          command: |
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/sctx-apigw:1.0.0
            docker stop sctx-apigw || true && docker rm sctx-apigw || true
            docker run -d --name sctx-apigw -p 80:3000 ${{ secrets.DOCKER_HUB_USERNAME }}/sctx-apigw:1.0.0
          # Hostname or IP address of the server.
          host: ${{ secrets.EC2_PUBLIC_IP }}
          # Username for authentication.
          username: ubuntu
          # Port number of the server.
          port: 22 # optional, default is 22
          # File  string that contains a private key for either key-based or hostbased user authentication (OpenSSH format)
          privateKey: ${{ secrets.EC2_SSH_KEY }}
